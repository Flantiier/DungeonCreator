//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Inputs_Maps/DungeonMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DungeonMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DungeonMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DungeonMaster"",
    ""maps"": [
        {
            ""name"": ""Controls"",
            ""id"": ""eb7f45de-ee3b-4191-ae67-82356ea43618"",
            ""actions"": [
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""031bc89a-4447-4bd6-8358-6d051e492cc8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3360c3e9-c57e-4135-9634-386c5876f00b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCW"",
                    ""type"": ""Button"",
                    ""id"": ""ab5d66ea-0f0a-4fa1-911f-913d86a92f66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateACW"",
                    ""type"": ""Button"",
                    ""id"": ""992a5758-4b99-4fc8-bfea-d039da944de8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Motion"",
                    ""type"": ""Value"",
                    ""id"": ""e3b46d09-f6e1-439d-add6-694817f2e2fc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamCW"",
                    ""type"": ""Button"",
                    ""id"": ""4953df66-372a-4ff7-a523-79a31c99add3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCamACW"",
                    ""type"": ""Button"",
                    ""id"": ""73490d8e-b4b2-44e3-9fab-a8d41a716965"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scrolling"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e3511339-424c-47b1-90de-fc247aaf6631"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0fe5d1c2-2a68-4b83-8919-dbef3c5fceb9"",
                    ""path"": ""<VirtualMouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e551e2a-c581-44f2-8c11-a90b331c7561"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07fbfb64-a6f6-4cae-a31b-247f784cda01"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""355f05be-f6dd-4360-95c3-a1e376e4979a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateACW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2538ef51-67cc-4eb7-9654-6012c85404c6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""24131070-5887-42f2-af1d-0687ed4d4d2c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""02b278cb-958c-4e81-b199-4c51a2e39bea"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""24010b6d-a690-4fc5-88db-e1751ed1a022"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e6948784-a9c3-4693-b353-4a3fa0a41612"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6b8d45e9-e0f2-41b5-8bf6-18901a91e7f4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamCW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d4c0f15-f9d7-4a83-b924-563c9c2b0b5d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamACW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ba1d60d-7c5c-46ee-9b7c-045cca40b7bf"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scrolling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controls
        m_Controls = asset.FindActionMap("Controls", throwIfNotFound: true);
        m_Controls_Mouse = m_Controls.FindAction("Mouse", throwIfNotFound: true);
        m_Controls_Interact = m_Controls.FindAction("Interact", throwIfNotFound: true);
        m_Controls_RotateCW = m_Controls.FindAction("RotateCW", throwIfNotFound: true);
        m_Controls_RotateACW = m_Controls.FindAction("RotateACW", throwIfNotFound: true);
        m_Controls_Motion = m_Controls.FindAction("Motion", throwIfNotFound: true);
        m_Controls_RotateCamCW = m_Controls.FindAction("RotateCamCW", throwIfNotFound: true);
        m_Controls_RotateCamACW = m_Controls.FindAction("RotateCamACW", throwIfNotFound: true);
        m_Controls_Scrolling = m_Controls.FindAction("Scrolling", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controls
    private readonly InputActionMap m_Controls;
    private IControlsActions m_ControlsActionsCallbackInterface;
    private readonly InputAction m_Controls_Mouse;
    private readonly InputAction m_Controls_Interact;
    private readonly InputAction m_Controls_RotateCW;
    private readonly InputAction m_Controls_RotateACW;
    private readonly InputAction m_Controls_Motion;
    private readonly InputAction m_Controls_RotateCamCW;
    private readonly InputAction m_Controls_RotateCamACW;
    private readonly InputAction m_Controls_Scrolling;
    public struct ControlsActions
    {
        private @DungeonMaster m_Wrapper;
        public ControlsActions(@DungeonMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mouse => m_Wrapper.m_Controls_Mouse;
        public InputAction @Interact => m_Wrapper.m_Controls_Interact;
        public InputAction @RotateCW => m_Wrapper.m_Controls_RotateCW;
        public InputAction @RotateACW => m_Wrapper.m_Controls_RotateACW;
        public InputAction @Motion => m_Wrapper.m_Controls_Motion;
        public InputAction @RotateCamCW => m_Wrapper.m_Controls_RotateCamCW;
        public InputAction @RotateCamACW => m_Wrapper.m_Controls_RotateCamACW;
        public InputAction @Scrolling => m_Wrapper.m_Controls_Scrolling;
        public InputActionMap Get() { return m_Wrapper.m_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IControlsActions instance)
        {
            if (m_Wrapper.m_ControlsActionsCallbackInterface != null)
            {
                @Mouse.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMouse;
                @Interact.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnInteract;
                @RotateCW.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCW;
                @RotateCW.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCW;
                @RotateCW.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCW;
                @RotateACW.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateACW;
                @RotateACW.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateACW;
                @RotateACW.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateACW;
                @Motion.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMotion;
                @Motion.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMotion;
                @Motion.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnMotion;
                @RotateCamCW.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamCW;
                @RotateCamCW.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamCW;
                @RotateCamCW.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamCW;
                @RotateCamACW.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamACW;
                @RotateCamACW.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamACW;
                @RotateCamACW.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnRotateCamACW;
                @Scrolling.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnScrolling;
                @Scrolling.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnScrolling;
                @Scrolling.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnScrolling;
            }
            m_Wrapper.m_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @RotateCW.started += instance.OnRotateCW;
                @RotateCW.performed += instance.OnRotateCW;
                @RotateCW.canceled += instance.OnRotateCW;
                @RotateACW.started += instance.OnRotateACW;
                @RotateACW.performed += instance.OnRotateACW;
                @RotateACW.canceled += instance.OnRotateACW;
                @Motion.started += instance.OnMotion;
                @Motion.performed += instance.OnMotion;
                @Motion.canceled += instance.OnMotion;
                @RotateCamCW.started += instance.OnRotateCamCW;
                @RotateCamCW.performed += instance.OnRotateCamCW;
                @RotateCamCW.canceled += instance.OnRotateCamCW;
                @RotateCamACW.started += instance.OnRotateCamACW;
                @RotateCamACW.performed += instance.OnRotateCamACW;
                @RotateCamACW.canceled += instance.OnRotateCamACW;
                @Scrolling.started += instance.OnScrolling;
                @Scrolling.performed += instance.OnScrolling;
                @Scrolling.canceled += instance.OnScrolling;
            }
        }
    }
    public ControlsActions @Controls => new ControlsActions(this);
    public interface IControlsActions
    {
        void OnMouse(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnRotateCW(InputAction.CallbackContext context);
        void OnRotateACW(InputAction.CallbackContext context);
        void OnMotion(InputAction.CallbackContext context);
        void OnRotateCamCW(InputAction.CallbackContext context);
        void OnRotateCamACW(InputAction.CallbackContext context);
        void OnScrolling(InputAction.CallbackContext context);
    }
}
